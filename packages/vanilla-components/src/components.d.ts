/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  TwitterShareButton as SqhCloseButton
} from './components/close-button/close-button';

declare global {
  interface HTMLSqhCloseButtonElement extends SqhCloseButton, HTMLElement {
  }
  var HTMLSqhCloseButtonElement: {
    prototype: HTMLSqhCloseButtonElement;
    new (): HTMLSqhCloseButtonElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-close-button": HTMLSqhCloseButtonElement;
  }
  interface ElementTagNameMap {
    "sqh-close-button": HTMLSqhCloseButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-close-button": JSXElements.SqhCloseButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhCloseButtonAttributes extends HTMLAttributes {
      text?: string;
    }
  }
}


import {
  CopyLinkButton as SqhCopyLinkButton
} from './components/copy-link-button/copy-link-button';

declare global {
  interface HTMLSqhCopyLinkButtonElement extends SqhCopyLinkButton, HTMLElement {
  }
  var HTMLSqhCopyLinkButtonElement: {
    prototype: HTMLSqhCopyLinkButtonElement;
    new (): HTMLSqhCopyLinkButtonElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-copy-link-button": HTMLSqhCopyLinkButtonElement;
  }
  interface ElementTagNameMap {
    "sqh-copy-link-button": HTMLSqhCopyLinkButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-copy-link-button": JSXElements.SqhCopyLinkButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhCopyLinkButtonAttributes extends HTMLAttributes {
      text?: string;
    }
  }
}


import {
  EmailShareButton as SqhEmailShareButton
} from './components/email-share-button/email-share-button';

declare global {
  interface HTMLSqhEmailShareButtonElement extends SqhEmailShareButton, HTMLElement {
  }
  var HTMLSqhEmailShareButtonElement: {
    prototype: HTMLSqhEmailShareButtonElement;
    new (): HTMLSqhEmailShareButtonElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-email-share-button": HTMLSqhEmailShareButtonElement;
  }
  interface ElementTagNameMap {
    "sqh-email-share-button": HTMLSqhEmailShareButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-email-share-button": JSXElements.SqhEmailShareButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhEmailShareButtonAttributes extends HTMLAttributes {
      backgroundColor?: string;
      borderColor?: string;
      displayRule?: string;
      emailBody?: string;
      emailSubject?: string;
      text?: string;
      textColor?: string;
    }
  }
}


import {
  FacebookShareButton as SqhFacebookShareButton
} from './components/facebook-share-button/facebook-share-button';

declare global {
  interface HTMLSqhFacebookShareButtonElement extends SqhFacebookShareButton, HTMLElement {
  }
  var HTMLSqhFacebookShareButtonElement: {
    prototype: HTMLSqhFacebookShareButtonElement;
    new (): HTMLSqhFacebookShareButtonElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-facebook-share-button": HTMLSqhFacebookShareButtonElement;
  }
  interface ElementTagNameMap {
    "sqh-facebook-share-button": HTMLSqhFacebookShareButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-facebook-share-button": JSXElements.SqhFacebookShareButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhFacebookShareButtonAttributes extends HTMLAttributes {
      backgroundColor?: string;
      borderColor?: string;
      displayRule?: string;
      text?: string;
      textColor?: string;
    }
  }
}


import {
  LinkedinShareButton as SqhLinkedinShareButton
} from './components/linkedin-share-button/linkedin-share-button';

declare global {
  interface HTMLSqhLinkedinShareButtonElement extends SqhLinkedinShareButton, HTMLElement {
  }
  var HTMLSqhLinkedinShareButtonElement: {
    prototype: HTMLSqhLinkedinShareButtonElement;
    new (): HTMLSqhLinkedinShareButtonElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-linkedin-share-button": HTMLSqhLinkedinShareButtonElement;
  }
  interface ElementTagNameMap {
    "sqh-linkedin-share-button": HTMLSqhLinkedinShareButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-linkedin-share-button": JSXElements.SqhLinkedinShareButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhLinkedinShareButtonAttributes extends HTMLAttributes {
      backgroundColor?: string;
      borderColor?: string;
      displayRule?: string;
      link?: string;
      redirectUrl?: string;
      shareBody?: string;
      shareImage?: string;
      summary?: string;
      text?: string;
      textColor?: string;
      title?: string;
    }
  }
}


import {
  StatsComponent as SqhRewardsActions
} from './components/rewards-actions/rewards-actions';

declare global {
  interface HTMLSqhRewardsActionsElement extends SqhRewardsActions, HTMLElement {
  }
  var HTMLSqhRewardsActionsElement: {
    prototype: HTMLSqhRewardsActionsElement;
    new (): HTMLSqhRewardsActionsElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-rewards-actions": HTMLSqhRewardsActionsElement;
  }
  interface ElementTagNameMap {
    "sqh-rewards-actions": HTMLSqhRewardsActionsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-rewards-actions": JSXElements.SqhRewardsActionsAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhRewardsActionsAttributes extends HTMLAttributes {
      hideText?: string;
      nextText?: string;
      previousText?: string;
    }
  }
}


import {
  RewardsList as SqhRewardsList
} from './components/rewards-list/rewards-list';

declare global {
  interface HTMLSqhRewardsListElement extends SqhRewardsList, HTMLElement {
  }
  var HTMLSqhRewardsListElement: {
    prototype: HTMLSqhRewardsListElement;
    new (): HTMLSqhRewardsListElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-rewards-list": HTMLSqhRewardsListElement;
  }
  interface ElementTagNameMap {
    "sqh-rewards-list": HTMLSqhRewardsListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-rewards-list": JSXElements.SqhRewardsListAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhRewardsListAttributes extends HTMLAttributes {
      dateFormatting?: string;
      showReferrer?: boolean;
      userIsReferred?: boolean;
    }
  }
}


import {
  ShareButtonContainer as SqhShareButtonContainer
} from './components/share-button-container/share-button-container';

declare global {
  interface HTMLSqhShareButtonContainerElement extends SqhShareButtonContainer, HTMLElement {
  }
  var HTMLSqhShareButtonContainerElement: {
    prototype: HTMLSqhShareButtonContainerElement;
    new (): HTMLSqhShareButtonContainerElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-share-button-container": HTMLSqhShareButtonContainerElement;
  }
  interface ElementTagNameMap {
    "sqh-share-button-container": HTMLSqhShareButtonContainerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-share-button-container": JSXElements.SqhShareButtonContainerAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhShareButtonContainerAttributes extends HTMLAttributes {
      maxWidth?: string;
    }
  }
}


import {
  SmsShareButton as SqhSmsShareButton
} from './components/sms-share-button/sms-share-button';

declare global {
  interface HTMLSqhSmsShareButtonElement extends SqhSmsShareButton, HTMLElement {
  }
  var HTMLSqhSmsShareButtonElement: {
    prototype: HTMLSqhSmsShareButtonElement;
    new (): HTMLSqhSmsShareButtonElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-sms-share-button": HTMLSqhSmsShareButtonElement;
  }
  interface ElementTagNameMap {
    "sqh-sms-share-button": HTMLSqhSmsShareButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-sms-share-button": JSXElements.SqhSmsShareButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhSmsShareButtonAttributes extends HTMLAttributes {
      backgroundColor?: string;
      borderColor?: string;
      displayRule?: string;
      shareBody?: string;
      text?: string;
      textColor?: string;
    }
  }
}


import {
  StatsComponent as SqhStatsComponent
} from './components/stats-component/stats-component';

declare global {
  interface HTMLSqhStatsComponentElement extends SqhStatsComponent, HTMLElement {
  }
  var HTMLSqhStatsComponentElement: {
    prototype: HTMLSqhStatsComponentElement;
    new (): HTMLSqhStatsComponentElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-stats-component": HTMLSqhStatsComponentElement;
  }
  interface ElementTagNameMap {
    "sqh-stats-component": HTMLSqhStatsComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-stats-component": JSXElements.SqhStatsComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhStatsComponentAttributes extends HTMLAttributes {
      friendsReferred?: string;
      rewardsEarned?: string;
      rewardsPending?: string;
      text?: string;
    }
  }
}


import {
  TextComponent as SqhTextComponent
} from './components/text-component/text-component';

declare global {
  interface HTMLSqhTextComponentElement extends SqhTextComponent, HTMLElement {
  }
  var HTMLSqhTextComponentElement: {
    prototype: HTMLSqhTextComponentElement;
    new (): HTMLSqhTextComponentElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-text-component": HTMLSqhTextComponentElement;
  }
  interface ElementTagNameMap {
    "sqh-text-component": HTMLSqhTextComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-text-component": JSXElements.SqhTextComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhTextComponentAttributes extends HTMLAttributes {
      fontSize?: string;
      text?: string;
      textAlign?: string;
    }
  }
}


import {
  TwitterShareButton as SqhTwitterShareButton
} from './components/twitter-share-button/twitter-share-button';

declare global {
  interface HTMLSqhTwitterShareButtonElement extends SqhTwitterShareButton, HTMLElement {
  }
  var HTMLSqhTwitterShareButtonElement: {
    prototype: HTMLSqhTwitterShareButtonElement;
    new (): HTMLSqhTwitterShareButtonElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-twitter-share-button": HTMLSqhTwitterShareButtonElement;
  }
  interface ElementTagNameMap {
    "sqh-twitter-share-button": HTMLSqhTwitterShareButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-twitter-share-button": JSXElements.SqhTwitterShareButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhTwitterShareButtonAttributes extends HTMLAttributes {
      backgroundColor?: string;
      borderColor?: string;
      displayRule?: string;
      text?: string;
      textColor?: string;
      twMessage?: string;
    }
  }
}


import {
  WhatsappShareButton as SqhWhatsappShareButton
} from './components/whatsapp-share-button/whatsapp-share-button';

declare global {
  interface HTMLSqhWhatsappShareButtonElement extends SqhWhatsappShareButton, HTMLElement {
  }
  var HTMLSqhWhatsappShareButtonElement: {
    prototype: HTMLSqhWhatsappShareButtonElement;
    new (): HTMLSqhWhatsappShareButtonElement;
  };
  interface HTMLElementTagNameMap {
    "sqh-whatsapp-share-button": HTMLSqhWhatsappShareButtonElement;
  }
  interface ElementTagNameMap {
    "sqh-whatsapp-share-button": HTMLSqhWhatsappShareButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sqh-whatsapp-share-button": JSXElements.SqhWhatsappShareButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface SqhWhatsappShareButtonAttributes extends HTMLAttributes {
      backgroundColor?: string;
      borderColor?: string;
      displayRule?: string;
      shareBody?: string;
      text?: string;
      textColor?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
